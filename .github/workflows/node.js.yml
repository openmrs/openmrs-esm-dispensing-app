name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  ESM_NAME: "@openmrs/esm-dispensing-app"
  JS_NAME: "openmrs-esm-dispensing-app.js"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18"
      - run: yarn
      - run: yarn lint
      - run: yarn coverage
      - run: yarn typescript
      - run: yarn build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
      - run: yarn install --immuatable
      - run: yarn version --new-version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}" --no-git-tag-version
      - run: yarn build
      - run: yarn publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18"
          registry-url: 'https://registry.npmjs.org'
      - run: yarn
      - run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  
  deploy:
    runs-on: ubuntu-latest

    needs: pre_release

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Trigger RefApp Build
        uses: fjogeleit/http-request-action@master
        with:
          url: https://ci.openmrs.org/rest/api/latest/queue/REFAPP-D3X
          method: "POST"
          customHeaders: '{ "Authorization": "Bearer ${{ secrets.BAMBOO_TOKEN }}" }'
